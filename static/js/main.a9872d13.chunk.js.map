{"version":3,"sources":["apps/local/hello.js","apps/local/clock.js","apps/local/trigger.js","apps/ajax/safebooru/thumbnails.js","apps/ajax/ajaxTest.js","apps/ajax/githubApi.js","layout/index.js","default.js","app.js","index.js"],"names":["element","Hello","bunchOFLines","i","push","key","React","Component","Clock","props","state","date","Date","this","timer","setInterval","tick","clearInterval","setState","toLocaleString","Toggle","valueBool","valueInteger","onClick","e","handleClick","resetValues","RenderThumbs","_isMounted","isLoaded","error","limit","tags","source","page","data","apiGrab","apiURL","fetch","then","res","json","result","responseState","message","status","className","length","tagsWithLinks","split","map","item","href","target","id","src","preview_file_url","alt","SafebooruAjax","pageNumber","showNext","loaded","prevState","event","name","value","toggles","onChange","handleInputChange","buttonClick","type","prevButton","turnPage","nextButton","pages","GitHubUsers","search","sort","handleSubmit","bind","handleOnChange","preventDefault","ts","onSubmit","SortByOptions","QueryDisplay","resultCount","isResultsIncomplete","tp","join","setStateComplete","githubApiURL","partialState","total_count","incomplete_results","items","output","style","margin","height","border","float","owner","avatar_url","width","full_name","html_url","description","substring","maxLength","stargazers_count","watchers_count","forks_count","open_issues","padding","login","options","Layout","sidebar","children","About","NoneSelected","inside","Apps","match","to","url","path","withRouter","WebpageRender","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.a9872d13.chunk.js","sourcesContent":["import React from \"react\";\r\n\r\nconst element = <b>This is just any string tbh</b>;\r\n\r\nclass Hello extends React.Component {\r\n    render() {\r\n        let bunchOFLines = [];\r\n\r\n        for (let i = 0; i < 500; i += 1) {\r\n            bunchOFLines.push(<p key={i}>This will repeat so the screen overflows line: {i}</p>);            \r\n        }\r\n\r\n        return (\r\n            <div>\r\n                {element}\r\n                <hr />\r\n                {bunchOFLines}\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Hello;","import React from \"react\";\r\n\r\n\r\nclass Clock extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            date: new Date(),\r\n        };\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.timer = setInterval(\r\n            () => this.tick(),\r\n            1000\r\n        );\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        clearInterval(this.timer);\r\n    }\r\n\r\n    tick() {\r\n        this.setState({\r\n            date: new Date(),\r\n        });\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                It is {this.state.date.toLocaleString()}!\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Clock;","import React from \"react\";\r\n\r\nclass Toggle extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            valueBool: true,\r\n            valueInteger: 0\r\n        };\r\n    }\r\n\r\n    handleClick() {\r\n        this.setState((state) => ({\r\n            valueBool: !state.valueBool,\r\n            valueInteger: (state.valueInteger) + 1,\r\n        }));\r\n    }\r\n\r\n    resetValues() {\r\n        this.setState(state => ({\r\n            valueInteger: 0,\r\n        }));\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                On/Off switch: <b>{this.state.valueBool? \"On\" : \"Off\"}</b><br />\r\n                Number increment: <b>{this.state.valueInteger}</b><br />\r\n                <button onClick={(e) => this.handleClick(e)}>Trigger</button>\r\n                <button onClick={(e) => this.resetValues(e)}>Reset</button> \r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Toggle;","import React from \"react\";\r\n\r\nexport default class RenderThumbs extends React.Component {\r\n    _isMounted = false;\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            isLoaded: false,\r\n            error: null,\r\n            limit: 10,\r\n            tags: \"\",\r\n            source: \"safebooru\",\r\n            page: 1,\r\n            data: [],\r\n        };\r\n    }\r\n\r\n    componentDidMount() {\r\n        this._isMounted = true;\r\n\r\n        this.setState({\r\n            limit: this.props.limit,\r\n            tags: this.props.tags,\r\n            source: this.props.source,\r\n            page: this.props.page,\r\n        }, this.apiGrab);\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        this._isMounted = false;\r\n    }\r\n\r\n    apiGrab() {\r\n        let limit = this.props.limit;\r\n        let tags = this.props.tags;\r\n        let page = this.props.page;\r\n        let source = this.props.source;\r\n\r\n        const apiURL = `https://${source}.donmai.us/posts.json?tags=${tags}&limit=${limit}&page=${page}`;\r\n\r\n        fetch(apiURL)\r\n            .then((res) => res.json())\r\n            .then(\r\n                (result) => {\r\n                    if (this._isMounted) {\r\n                        let responseState = {};\r\n\r\n                        if (result.message && !result.status) {\r\n                            responseState = {\r\n                                isLoaded: true,\r\n                                error: result.message,\r\n                            };\r\n                        } else {\r\n                            responseState = {\r\n                                isLoaded: true,\r\n                                data: result,\r\n                            };\r\n                        }\r\n\r\n                        this.setState(responseState);\r\n                    }                    \r\n                },\r\n                (error) => {\r\n                    this.setState({\r\n                        isLoaded: true,\r\n                        error,\r\n                    });\r\n                }\r\n            );\r\n    }\r\n\r\n    render() {\r\n        const {error, isLoaded, data, tags, source} = this.state;\r\n\r\n        if (error) {\r\n            return (\r\n                <div className=\"_errorHandle\">\r\n                    <b>{error}</b>\r\n                </div>\r\n            );\r\n        } else if (!isLoaded) {\r\n            return (\r\n                <div className=\"_loadingHandle\">\r\n                    Loading thumbnails....\r\n                </div>\r\n            );\r\n        }\r\n\r\n        let status;\r\n        if (tags.length === 0) {\r\n            status = \"Showing the most recent posts\";\r\n        } else {\r\n            let tagGroup = tags.split(\" \");\r\n            let tagsWithLinks = tagGroup.map((item) => (\r\n                <span key={item}>\r\n                    <a \r\n                        href={`https://${source}.donmai.us/posts?tags=${item}`}\r\n                        target=\"_new\"\r\n                    >{item}</a>&nbsp;\r\n                </span>\r\n            ));\r\n\r\n        status = <span>images with <b>{tagsWithLinks}</b> tags</span>\r\n        }\r\n\r\n        return (\r\n            <div className=\"imageGallery\" >\r\n                Loaded {data.length} {status} (page: {this.state.page})<br />\r\n                <div>\r\n                    {data.map((item) => (\r\n                        <a\r\n                            href={`https://${source}.donmai.us/posts/` + item.id} \r\n                            target=\"_new\" \r\n                            key={\"link\"+item.id}\r\n                        ><img \r\n                            src={item.preview_file_url} \r\n                            alt={item.id}\r\n                            className=\"thumbnails\"\r\n                        /></a>\r\n                        \r\n                    ))}\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}","import React from \"react\";\r\nimport RenderThumbs from \"./safebooru/thumbnails\";\r\n\r\nclass SafebooruAjax extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            source: \"safebooru\",\r\n            limit: 20,\r\n            tags: \"scenery no_human\",\r\n            pageNumber: 1,\r\n\r\n            key: 0,\r\n\r\n            showNext: true,\r\n            loaded: false,\r\n        };\r\n    }\r\n\r\n    buttonClick() {\r\n        this.setState((prevState) => {\r\n            return { \r\n                key: prevState.key + 1,\r\n                pageNumber: 1,\r\n                showNext: true,\r\n                loaded: false,\r\n            };\r\n        });\r\n    }\r\n\r\n    handleInputChange(event) {\r\n        let name = event.target.name;\r\n        let value = event.target.value;\r\n\r\n        this.setState({\r\n            [name]: value,\r\n        });\r\n    }\r\n\r\n    turnPage(value) {\r\n        this.setState((prevState) => {\r\n            return {\r\n                pageNumber: prevState.pageNumber + value,\r\n                key: prevState.key + 1,\r\n            };\r\n        });\r\n    }\r\n\r\n    render() {\r\n        var toggles = (\r\n            <div className=\"_inputHolder\">\r\n                Source:\r\n                <select \r\n                    name=\"source\"\r\n                    value={this.state.source}\r\n                    onChange={(e) => {\r\n                        this.handleInputChange(e);\r\n                        this.buttonClick(e);\r\n                    }}\r\n                >\r\n                    <option value=\"safebooru\">Safebooru</option>\r\n                    <option value=\"danbooru\">Danbooru</option>\r\n                </select>\r\n                Tags:\r\n                <input \r\n                    name=\"tags\"\r\n                    type=\"text\"\r\n                    value={this.state.tags}\r\n                    onChange={(e) => this.handleInputChange(e)}\r\n                />\r\n                Limit:\r\n                <input \r\n                    name=\"limit\"\r\n                    type=\"text\"\r\n                    value={this.state.limit}\r\n                    onChange={(e) => this.handleInputChange(e)}\r\n                />\r\n                <button onClick={(e) => this.buttonClick(e)}>:magnifying glass emoji:</button>\r\n            </div>\r\n        );\r\n\r\n        let prevButton = (this.state.pageNumber > 1)\r\n            && <button onClick={(e) => this.turnPage(-1)}>&lt;</button>;\r\n        let nextButton = ((this.state.pageNumber) && this.state.showNext)\r\n            && <button onClick={(e) => this.turnPage(1)}>&gt;</button>;\r\n\r\n        let pages =  (\r\n            <div className=\"_pageIndicator\">\r\n                page: {prevButton}\r\n                {this.state.pageNumber}\r\n                {nextButton}\r\n            </div>\r\n        );    \r\n\r\n        return (\r\n            <div className=\"text-center\">\r\n                {toggles}\r\n                <RenderThumbs\r\n                    source={this.state.source}\r\n                    tags={this.state.tags}\r\n                    page={this.state.pageNumber}\r\n                    limit={this.state.limit} \r\n                    key={this.state.key}\r\n                />\r\n                <hr />\r\n                {pages}\r\n            </div>            \r\n        );\r\n    }\r\n}\r\n\r\nexport default SafebooruAjax;","import React from \"react\";\r\n\r\nclass GitHubUsers extends React.Component {\r\n    _isMounted = false;\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            key: 0,\r\n            search: \"\",\r\n            type: \"repositories\",\r\n            sort: \"stars\",\r\n        };\r\n\r\n        this.handleSubmit = this.handleSubmit.bind(this);\r\n        this.handleOnChange = this.handleOnChange.bind(this);\r\n    }\r\n\r\n    componentDidMount() {\r\n        this._isMounted = true;\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        this._isMounted = false;\r\n    }\r\n\r\n    handleSubmit(event) {\r\n        event.preventDefault();\r\n        this.setState((prevState) => {\r\n            return { key: prevState.key + 1, };\r\n        });\r\n    }\r\n\r\n    handleOnChange(event) {\r\n        const target = event.target;\r\n        const value = target.value;\r\n        const name = target.name;\r\n\r\n        this.setState({\r\n            [name]: value,\r\n        });\r\n    }\r\n\r\n    render() {\r\n        const ts = this.state;\r\n        return (\r\n            <div>\r\n                <form onSubmit={this.handleSubmit}>\r\n                    Look for:  \r\n                    <input type=\"text\" name=\"search\" onChange={this.handleOnChange} />\r\n                    which is a: \r\n                    <select name=\"type\" onChange={this.handleOnChange}>\r\n                        <option value=\"repositories\">Repository</option>\r\n                        <option value=\"users\">User</option>\r\n                    </select>\r\n                    sort by:\r\n                    <select name=\"sort\" onChange={this.handleOnChange}>\r\n                        <SortByOptions type={this.state.type}/>  \r\n                    </select>                    \r\n                    <input type=\"submit\" value=\"Do Query\"/> \r\n                </form>\r\n                <QueryDisplay search={ts.search} type={ts.type} sort={ts.sort} key={ts.key}/>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nclass QueryDisplay extends React.Component {\r\n    _isMounted = false;\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            search: \"\",\r\n            type: \"repo\",\r\n            sort: \"stars\",\r\n\r\n            isLoaded: false,\r\n\r\n            resultCount: null, \r\n            isResultsIncomplete: null,\r\n            data: [],\r\n\r\n            error: null,\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        const tp = this.props;\r\n        \r\n        this._isMounted = true;\r\n        \r\n        if (tp.search !== \"\") {\r\n            this.setState({\r\n                search: tp.search.split(\" \").join(\"+\"),\r\n                type: tp.type,\r\n                sort: tp.sort,\r\n            }, this.setStateComplete);\r\n        }    \r\n    }\r\n\r\n    setStateComplete() {\r\n        const ts = this.state;\r\n        const githubApiURL = `https://api.github.com/search/${ts.type}?q=${ts.search}&sort=${ts.sort}`;\r\n        \r\n        if (this._isMounted) {\r\n            fetch(githubApiURL).then((res) => res.json()).then(\r\n                (result) => {\r\n                    var partialState = {};\r\n\r\n                    if (result.message) {\r\n                        partialState = {\r\n                            error: result.message,\r\n                            isLoaded: true,\r\n                        }\r\n                    } else {\r\n                        partialState = {\r\n                            resultCount: result.total_count,\r\n                            isResultsIncomplete: result.incomplete_results,\r\n                            data: result.items,\r\n                            isLoaded: true,\r\n                        }\r\n                    }\r\n\r\n                    this.setState( partialState );\r\n                },(error) => {\r\n                    this.setState({\r\n                        isLoaded: true,\r\n                        error,\r\n                    });\r\n                }\r\n            );\r\n        }\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        this._isMounted = false;\r\n    }\r\n\r\n    render() {\r\n        const ts = this.state;\r\n        const type = ts.type;\r\n        let output = null;\r\n        \r\n        const style = {margin: \"5px\", height:\"100px\", border: \"1px solid black\"};\r\n\r\n        if (type === \"repositories\") {\r\n            const maxLength = 300;\r\n            output = (ts.data.map((item) => (\r\n                <div key={item.id} style={style}>\r\n                    <div style={{float: \"left\"}}>\r\n                        <img src={item.owner.avatar_url} alt={item.owner.id} width=\"75px\"/> \r\n                    </div>\r\n                    <div>\r\n                        <b>{item.full_name}</b><a href={item.html_url} target=\"_new\">=&gt;</a><br />\r\n                        <small>\r\n                            {\r\n                                (item.description === null)\r\n                                ? \"\"\r\n                                : (item.description.length > maxLength)\r\n                                    ? item.description.substring(0, maxLength - 3) + \"...\"\r\n                                    : item.description                                \r\n                            }\r\n                        </small><br/>\r\n                        <small>\r\n                            stars: {item.stargazers_count} - \r\n                            watchers: {item.watchers_count} -\r\n                            forks: {item.forks_count} - \r\n                            open issues: {item.open_issues}\r\n                        </small>\r\n                    </div>                   \r\n                </div>                    \r\n            )));\r\n        } else if (type === \"users\") {\r\n            output = (ts.data.map((item) => (\r\n                <div key={item.id} style={style}>\r\n                    <div style={{float: \"left\"}}>\r\n                        <img src={item.avatar_url} alt={item.id} width=\"75px\"/>\r\n                    </div>\r\n                    <div style={{padding:\"10px\"}}>\r\n                        <p>{item.login}<a href={item.html_url} target=\"_new\">=&gt;</a></p>\r\n                    </div>                   \r\n                </div>                    \r\n            )));\r\n        } else {\r\n            output = <i>Try searching something...</i>;\r\n        }\r\n\r\n        return (\r\n            <div>\r\n                {output}\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nfunction SortByOptions(props) {\r\n    let type = props.type;\r\n    let options = [];\r\n\r\n    if (type === \"repositories\") {\r\n        options.push(\r\n            <option value=\"stars\" key=\"stars\">Stars</option>,\r\n            <option value=\"forks\" key=\"forks\">Forks</option>,\r\n            <option value=\"help-wanted-issues\" key=\"help-wanted-issues\">Issues</option>,\r\n            <option value=\"updated\" key=\"updated\">Updated</option>,\r\n        );\r\n    } else if (type === \"users\") {\r\n        options.push(\r\n            <option value=\"followers\" key=\"followers\">Followers</option>,\r\n            <option value=\"repositories\" key=\"repositories\">Repositories</option>,\r\n            <option value=\"joined\" key=\"joined\">Joined</option>,\r\n        );\r\n    }\r\n    return options;\r\n}\r\n\r\nexport default GitHubUsers;","import React from \"react\";\r\n\r\nexport default function Layout(props) {\r\n    return (\r\n        <div className='row'>\r\n            <div className='column side'>\r\n                {props.sidebar}\r\n            </div>\r\n            <div className='column middle'>\r\n                {props.children}\r\n            </div>\r\n        </div>\r\n    );\r\n}","import React from \"react\";\r\nimport Layout from \"./layout\";\r\n\r\nexport function About() {\r\n    return (\r\n        <Layout sidebar={\r\n            <div>            \r\n                <b>List Header</b>\r\n                <ol>\r\n                    <li>there are no links here</li>\r\n                </ol>    \r\n            </div>\r\n        }>\r\n            A ReactJS app.\r\n        </Layout>\r\n    );\r\n}\r\n\r\nexport function NoneSelected(props) {\r\n    const message = <i>Select something by clicking on the texts</i>;\r\n    if(props.inside) {\r\n        return message;\r\n    }  \r\n\r\n    return (\r\n        <Layout sidebar={<i>none</i>}>{message}</Layout>\r\n    );\r\n}","import React from \"react\";\r\nimport { withRouter } from \"react-router\";\r\nimport {\r\n    Link, \r\n    Switch,\r\n    Route,\r\n    //useParams\r\n} from \"react-router-dom\";\r\n\r\nimport {\r\n    Hello, \r\n    Clock, \r\n    Trigger, \r\n    SafebooruAjax, \r\n    GithubApi\r\n} from \"./apps\";\r\n\r\nimport { NoneSelected } from \"./default\";\r\n\r\nimport Layout from \"./layout\";\r\n\r\nclass Apps extends React.Component {\r\n    render() {\r\n        let match = this.props.match;\r\n        return (\r\n            <Layout sidebar={\r\n                <div>\r\n                    <b>Static Outputs</b>\r\n                    <ol>\r\n                        <li><Link to={`${match.url}/hello`}>String output</Link></li>\r\n                        <li><Link to={`${match.url}/clock`}>Ticking Clock</Link></li>\r\n                    </ol>\r\n                    <b>On Events</b>\r\n                    <ol>\r\n                        <li><Link to={`${match.url}/toggle`}>Toggle button</Link></li>\r\n                    </ol>\r\n                    <b>API Requests</b>\r\n                    <ol>\r\n                        <li><Link to={`${match.url}/booru`}>*booru</Link></li>\r\n                        <li><Link to={`${match.url}/github`}>GitHub</Link></li>\r\n                    </ol>\r\n                </div>\r\n            }>\r\n                <Switch>\r\n                    <Route path={`${match.path}/hello`}><Hello /></Route>\r\n                    <Route path={`${match.path}/clock`}><Clock /></Route>\r\n                    <Route path={`${match.path}/toggle`}><Trigger /></Route>\r\n                    <Route path={`${match.path}/booru`}><SafebooruAjax /></Route>\r\n                    <Route path={`${match.path}/github`}><GithubApi /></Route>\r\n                    <Route path={match.path}><NoneSelected inside=\"false\"/></Route>                    \r\n                </Switch>\r\n            </Layout>\r\n        );\r\n    }\r\n}\r\n\r\nexport default withRouter(Apps);","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport {\r\n    //BrowserRouter as Router, //if the server has the page at the link, use this\r\n    HashRouter as HRouter,  //if your app only relies on client side rendering, use this\r\n    Switch,\r\n    Route,\r\n    Link,\r\n    //useRouteMatch,\r\n    //useParams\r\n  } from \"react-router-dom\";\r\n  \r\nimport \"./index.css\";\r\n\r\nimport Apps from \"./app\";\r\nimport {About, NoneSelected} from \"./default\";\r\n\r\nclass WebpageRender extends React.Component {\r\n    render() {\r\n        return (\r\n            <div className=\"main-div\">\r\n                <HRouter>\r\n                    <div className=\"topNav\">\r\n                        <Link to=\"/app\">App</Link>\r\n                        <Link to=\"/about\">About</Link>\r\n                    </div>\r\n                    <div className=\"base-div\">\r\n                        <Switch>\r\n                            <Route path=\"/app\"><Apps /></Route>\r\n                            <Route path=\"/about\"><About /></Route>\r\n                            <Route path=\"/\"><NoneSelected /></Route>\r\n                        </Switch>\r\n                    </div>\r\n                </HRouter>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nReactDOM.render(<WebpageRender />, document.getElementById(\"ReactApp\"));\r\n\r\n"],"sourceRoot":""}