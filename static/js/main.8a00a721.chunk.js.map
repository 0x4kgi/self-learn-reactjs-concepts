{"version":3,"sources":["local/hello.js","local/clock.js","local/trigger.js","ajax/ajaxTest.js","ajax/githubApi.js","index.js"],"names":["element","Hello","bunchOFLines","i","push","key","React","Component","Clock","props","state","date","Date","this","timer","setInterval","tick","clearInterval","setState","toLocaleString","Toggle","valueBool","valueInteger","onClick","e","handleClick","resetValues","RenderThumbs","_isMounted","isLoaded","error","limit","data","fetch","then","res","json","result","className","length","map","item","src","preview_file_url","alt","id","SafebooruAjax","defaultLimit","document","getElementById","value","toggles","type","placeholder","defaultValue","buttonClick","GitHubUsers","search","sort","handleSubmit","bind","handleOnChange","event","preventDefault","target","name","ts","onSubmit","onChange","SortByOptions","QueryDisplay","resultCount","isResultsIncomplete","tp","split","join","setStateComplete","githubApiURL","partialState","message","total_count","incomplete_results","items","output","style","margin","height","border","float","owner","avatar_url","width","full_name","href","html_url","description","substring","maxLength","stargazers_count","watchers_count","forks_count","open_issues","padding","login","options","WebpageRender","path","window","location","pathname","to","Apps","About","NoneSelected","match","useRouteMatch","url","ReactDOM","render"],"mappings":"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","file":"static/js/main.8a00a721.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nconst element = <b>This is just any string tbh</b>;\r\n\r\nclass Hello extends React.Component {\r\n    render() {\r\n        let bunchOFLines = [];\r\n\r\n        for (let i = 0; i < 500; i += 1) {\r\n            bunchOFLines.push(<p key={i}>This will repeat so the screen overflows line: {i}</p>);            \r\n        }\r\n\r\n        return (\r\n            <div>\r\n                {element}\r\n                <hr />\r\n                {bunchOFLines}\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Hello;","import React from 'react';\r\n\r\n\r\nclass Clock extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            date: new Date(),\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.timer = setInterval(\r\n            () => this.tick(),\r\n            1000\r\n        );\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        clearInterval(this.timer);\r\n    }\r\n\r\n    tick() {\r\n        this.setState({\r\n            date: new Date(),\r\n        });\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                It is {this.state.date.toLocaleString()}!\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Clock;","import React from 'react';\r\n\r\nclass Toggle extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            valueBool: true,\r\n            valueInteger: 0\r\n        }\r\n    }\r\n\r\n    handleClick() {\r\n        this.setState(state => ({\r\n            valueBool: !state.valueBool,\r\n            valueInteger: (state.valueInteger) + 1,\r\n        }));\r\n    }\r\n\r\n    resetValues() {\r\n        this.setState(state => ({\r\n            valueInteger: 0,\r\n        }));\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                On/Off switch: <b>{this.state.valueBool? 'On' : 'Off'}</b><br />\r\n                Number increment: <b>{this.state.valueInteger}</b><br />\r\n                <button onClick={(e) => this.handleClick(e)}>Trigger</button>\r\n                <button onClick={(e) => this.resetValues(e)}>Reset</button> \r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Toggle;","import React from 'react';\r\n\r\nclass RenderThumbs extends React.Component {\r\n    _isMounted = false;\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            isLoaded: false,\r\n            error: null,\r\n            limit: this.props.limit,\r\n            data: [],\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        this._isMounted = true;\r\n        fetch('https://safebooru.donmai.us/posts.json?tags=scenery&limit=' + this.state.limit)\r\n            .then(res => res.json())\r\n            .then(\r\n                (result) => {\r\n                    if (this._isMounted) {\r\n                        this.setState({\r\n                            isLoaded: true,\r\n                            data: result,\r\n                        });\r\n                    }\r\n                    \r\n                },\r\n                (error) => {\r\n                    this.setState({\r\n                        isLoaded: true,\r\n                        error,\r\n                    });\r\n                }\r\n            );\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        this._isMounted = false;\r\n    }\r\n\r\n    render() {\r\n        const {error, isLoaded, data} = this.state;\r\n\r\n        if (error) {\r\n            return (\r\n                <div className=\"_errorHandle\">\r\n                    <b>{error}</b>\r\n                </div>\r\n            );\r\n        } else if (!isLoaded) {\r\n            return (\r\n                <div className=\"_loadingHandle\">\r\n                    Loading thumbnails....\r\n                </div>\r\n            );\r\n        }\r\n\r\n        return (\r\n            <div className=\"imageGallery\" >\r\n                Loaded {data.length} images<br />\r\n                <div>\r\n                    {data.map(item => (\r\n                        <img \r\n                            src={item.preview_file_url} \r\n                            alt={item.id} key={item.id}\r\n                            className=\"thumbnails\"\r\n                        />\r\n                    ))}\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nclass SafebooruAjax extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            defaultLimit: 10,\r\n            limit: 10,\r\n        };\r\n    }\r\n\r\n    buttonClick() {\r\n        this.setState({\r\n            limit: document.getElementById('limitInput').value,\r\n        });\r\n    }\r\n\r\n\r\n    render() {\r\n        var toggles = (\r\n            <div className=\"_inputHolder\">\r\n                Limit: (max 200)\r\n                <input \r\n                    type=\"text\"  \r\n                    placeholder=\"enter how many images to load\"\r\n                    defaultValue=\"10\"\r\n                    id=\"limitInput\"\r\n                />\r\n                <button onClick={(e) => this.buttonClick(e)}>Change limit</button>\r\n            </div>\r\n        )\r\n\r\n        return (\r\n            <div className=\"text-center\">\r\n                {toggles}\r\n                <RenderThumbs limit={this.state.limit} key={this.state.limit}/>\r\n            </div>            \r\n        );\r\n    }\r\n}\r\n\r\nexport default SafebooruAjax;","import React from 'react';\r\n\r\nclass GitHubUsers extends React.Component {\r\n    _isMounted = false;\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            key: 0,\r\n            search: \"\",\r\n            type: \"repositories\",\r\n            sort: \"stars\",\r\n        };\r\n\r\n        this.handleSubmit = this.handleSubmit.bind(this);\r\n        this.handleOnChange = this.handleOnChange.bind(this);\r\n    }\r\n\r\n    componentDidMount() {\r\n        this._isMounted = true;\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        this._isMounted = false;\r\n    }\r\n\r\n    handleSubmit(event) {\r\n        event.preventDefault();\r\n        this.setState({\r\n            key: this.state.key + 1,\r\n        })\r\n    }\r\n\r\n    handleOnChange(event) {\r\n        const target = event.target;\r\n        const value = target.value;\r\n        const name = target.name;\r\n\r\n        this.setState({\r\n            [name]: value,\r\n        })\r\n    }\r\n\r\n    render() {\r\n        const ts = this.state;\r\n        return (\r\n            <div>\r\n                <form onSubmit={this.handleSubmit}>\r\n                    Look for:  \r\n                    <input type=\"text\" name=\"search\" onChange={this.handleOnChange} />\r\n                    which is a: \r\n                    <select name=\"type\" onChange={this.handleOnChange}>\r\n                        <option value=\"repositories\">Repository</option>\r\n                        <option value=\"users\">User</option>\r\n                    </select>\r\n                    sort by:\r\n                    <select name=\"sort\" onChange={this.handleOnChange}>\r\n                        <SortByOptions type={this.state.type}/>  \r\n                    </select>                    \r\n                    <input type=\"submit\" value=\"Do Query\"/> \r\n                </form>\r\n                <QueryDisplay search={ts.search} type={ts.type} sort={ts.sort} key={ts.key}/>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nclass QueryDisplay extends React.Component {\r\n    _isMounted = false;\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            search: \"\",\r\n            type: \"repo\",\r\n            sort: \"stars\",\r\n\r\n            isLoaded: false,\r\n\r\n            resultCount: null, \r\n            isResultsIncomplete: null,\r\n            data: [],\r\n\r\n            error: null,\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        const tp = this.props;\r\n        \r\n        this._isMounted = true;\r\n        \r\n        if (tp.search !== \"\") {\r\n            this.setState({\r\n                search: tp.search.split(' ').join('+'),\r\n                type: tp.type,\r\n                sort: tp.sort,\r\n            }, this.setStateComplete);\r\n        }    \r\n    }\r\n\r\n    setStateComplete() {\r\n        const ts = this.state;\r\n        const githubApiURL = `https://api.github.com/search/${ts.type}?q=${ts.search}&sort=${ts.sort}`\r\n        \r\n        if (this._isMounted) {\r\n            fetch(githubApiURL).then(res => res.json()).then(\r\n                (result) => {\r\n                    var partialState = {};\r\n\r\n                    if (result.message) {\r\n                        partialState = {\r\n                            error: result.message,\r\n                            isLoaded: true,\r\n                        }\r\n                    } else {\r\n                        partialState = {\r\n                            resultCount: result.total_count,\r\n                            isResultsIncomplete: result.incomplete_results,\r\n                            data: result.items,\r\n                            isLoaded: true,\r\n                        }\r\n                    }\r\n\r\n                    this.setState( partialState );\r\n                },(error) => {\r\n                    this.setState({\r\n                        isLoaded: true,\r\n                        error,\r\n                    });\r\n                }\r\n            );\r\n        }\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        this._isMounted = false;\r\n    }\r\n\r\n    render() {\r\n        const ts = this.state;\r\n        const type = ts.type;\r\n        let output = null;\r\n        \r\n        const style = {margin: \"5px\", height:\"100px\", border: \"1px solid black\"};\r\n\r\n        if (type === 'repositories') {\r\n            const maxLength = 300;\r\n            output = (ts.data.map(item => (\r\n                <div key={item.id} style={style}>\r\n                    <div style={{float: \"left\"}}>\r\n                        <img src={item.owner.avatar_url} alt={item.owner.id} width=\"75px\"/> \r\n                    </div>\r\n                    <div>\r\n                        <b>{item.full_name}</b><a href={item.html_url} target=\"_new\">=&gt;</a><br />\r\n                        <small>\r\n                            {\r\n                                (item.description === null)\r\n                                ? ''\r\n                                : (item.description.length > maxLength)\r\n                                    ? item.description.substring(0, maxLength - 3) + '...'\r\n                                    : item.description                                \r\n                            }\r\n                        </small><br/>\r\n                        <small>\r\n                            stars: {item.stargazers_count} - \r\n                            watchers: {item.watchers_count} -\r\n                            forks: {item.forks_count} - \r\n                            open issues: {item.open_issues}\r\n                        </small>\r\n                    </div>                   \r\n                </div>                    \r\n            )));\r\n        } else if (type === 'users') {\r\n            output = (ts.data.map(item => (\r\n                <div key={item.id} style={style}>\r\n                    <div style={{float: \"left\"}}>\r\n                        <img src={item.avatar_url} alt={item.id} width=\"75px\"/>\r\n                    </div>\r\n                    <div style={{padding:\"10px\"}}>\r\n                        <p>{item.login}<a href={item.html_url} target=\"_new\">=&gt;</a></p>\r\n                    </div>                   \r\n                </div>                    \r\n            )));\r\n        } else {\r\n            output = <i>Try searching something...</i>;\r\n        }\r\n\r\n        return (\r\n            <div>\r\n                {output}\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nfunction SortByOptions(props) {\r\n    let type = props.type;\r\n    let options = [];\r\n\r\n    if (type === 'repositories') {\r\n        options.push(\r\n            <option value=\"stars\" key=\"stars\">Stars</option>,\r\n            <option value=\"forks\" key=\"forks\">Forks</option>,\r\n            <option value=\"help-wanted-issues\" key=\"help-wanted-issues\">Issues</option>,\r\n            <option value=\"updated\" key=\"updated\">Updated</option>,\r\n        );\r\n    } else if (type === 'users') {\r\n        options.push(\r\n            <option value=\"followers\" key=\"followers\">Followers</option>,\r\n            <option value=\"repositories\" key=\"repositories\">Repositories</option>,\r\n            <option value=\"joined\" key=\"joined\">Joined</option>,\r\n        );\r\n    }\r\n    return options;\r\n}\r\n\r\nexport default GitHubUsers;","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport {\r\n    BrowserRouter as Router,\r\n    Switch,\r\n    Route,\r\n    Link,\r\n    useRouteMatch,\r\n    //useParams\r\n  } from \"react-router-dom\";\r\nimport './index.css';\r\n\r\nimport Hello from './local/hello.js';\r\nimport Clock from './local/clock.js';\r\nimport Toggle from './local/trigger.js';\r\nimport SafebooruAjax from './ajax/ajaxTest.js';\r\nimport GitHubUsers from './ajax/githubApi.js';\r\n\r\nclass WebpageRender extends React.Component {\r\n    render() {\r\n        let path = window.location.pathname;\r\n        return (\r\n            <div className='main-div'>\r\n                <Router>\r\n                    <div className='topNav'>\r\n                        <Link to={`${path}app`}>App</Link>\r\n                        <Link to={`${path}about`}>About</Link>\r\n                    </div>\r\n                    <div className='base-div'>\r\n                        <Switch>\r\n                            <Route path={'/app'}><Apps /></Route>\r\n                            <Route path={'/about'}><About /></Route>\r\n                            <Route path={'/'}><NoneSelected /></Route>\r\n                        </Switch>\r\n                    </div>\r\n                </Router>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nfunction Apps() {\r\n    let match = useRouteMatch();\r\n\r\n    return (\r\n        <div className='row'>\r\n            <div className='column side'>\r\n                <b>Static Outputs</b>\r\n                <ol>\r\n                    <li><Link to={`${match.url}/hello`}>String output</Link></li>\r\n                    <li><Link to={`${match.url}/clock`}>Ticking Clock</Link></li>\r\n                </ol>\r\n                <b>On Events</b>\r\n                <ol>\r\n                    <li><Link to={`${match.url}/toggle`}>Toggle button</Link></li>\r\n                </ol>\r\n                <b>API Requests</b>\r\n                <ol>\r\n                    <li><Link to={`${match.url}/safebooru`}>Safebooru</Link></li>\r\n                    <li><Link to={`${match.url}/github`}>GitHub</Link></li>\r\n                </ol>\r\n            </div>\r\n            <div className='column middle'>\r\n                <Switch>\r\n                    <Route path={`${match.path}/hello`}><Hello /></Route>\r\n                    <Route path={`${match.path}/clock`}><Clock /></Route>\r\n                    <Route path={`${match.path}/toggle`}><Toggle /></Route>\r\n                    <Route path={`${match.path}/safebooru`}><SafebooruAjax /></Route>\r\n                    <Route path={`${match.path}/github`}><GitHubUsers /></Route>\r\n                    <Route path={match.path}><NoneSelected /></Route>                    \r\n                </Switch>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nfunction About() {\r\n    return (\r\n        <div className='row'>\r\n            <div className='column side'>\r\n                <b>List Header</b>\r\n                <ol>\r\n                    <li>there are no links here :)</li>\r\n                </ol>                \r\n            </div>\r\n            <div className='column middle'>\r\n                A ReactJS web app that was made by me to practice ReactJS.\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nfunction NoneSelected() {\r\n    return (\r\n        <div>Select something by clicking on the texts :)</div>\r\n    );\r\n}\r\n\r\nReactDOM.render(<WebpageRender />, document.getElementById('ReactApp'));\r\n\r\n"],"sourceRoot":""}